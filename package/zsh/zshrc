# history
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=2000

# config
setopt appendhistory
setopt extendedglob nomatch notify no_beep
setopt prompt_cr prompt_sp

# env vars
export KEYTIMEOUT=1
export BR_REPOROOT="${HOME}/repository"

# zle
bindkey -v
bindkey -v "^r" history-incremental-pattern-search-backward
bindkey -v "^ " push-line-or-edit
bindkey -a "^ " push-line-or-edit

# zstyle
zstyle :compinstall filename '/home/abstractednoah/.zshrc'
autoload -Uz compinit
compinit

# prompt
BR_PROMPTCHAR=ðŸ¢’
PROMPT_0="%B${BR_PROMPTCHAR}%b "
PROMPT_1='%s%B%n %M %75<..<%~%b %? %#'
NL=$'\n'
PROMPT="${PROMPT_1}${NL}${PROMPT_0}"

# ALIAS
# Yes, I know that aliases are supposed to be bad. But aliases for simple
# abbreviations allow the tmux window-renaming hooks above to get the actual
# name of the command; with functions, the preexec() hook can't get the actual
# command name (without excessive effort).
alias reload-zsh='. ~/.zshrc'
if command -v tmux &> /dev/null; then
    alias reload-tmux='tmux source-file ~/.tmux.conf'
fi
alias ll='ls -alF'
if command -v xclip &> /dev/null; then
    alias Y='xclip -selection clipboard'
    alias P='xclip -selection clipboard -o'
fi
if command -v tmux &> /dev/null && command -v tmuxinator &> /dev/null; then
    alias T='tmux a >&2 2>/dev/null || tmuxinator main'
fi
if command -v ranger &> /dev/null; then
    alias R='ranger'
fi
if command -v vim &> /dev/null; then
    alias v='vim'
fi
if command -v git &> /dev/null; then
    alias g='git'
fi
if command -v curl &> /dev/null; then
    alias wttr='curl "wttr.in/?mF&format=4"'
fi
if command -v nix-env &> /dev/null; then
    # Note that 'nix-env' is aliased in 'zshenv' with pinned nixpkgs.
    alias reload-nix-packages='nix-env -v -riA'
fi
function O() { # O <path to xdg-open-able file>
    local _path="${1}"
    # Suffix '&!' means 'disown' in zsh.
    xdg-open "${_path}" &!
}
# Don't ssh from tmux, that's dangerous!
alias ssh='[ -z ${TMUX} ] && ssh'

_br_fd_git_roots() { # Find git roots below $1.
    fd -H -t d '^\.git$' . "${1:-.}" | sed 's:/\.git$::'
}

gomux() { # Init or attach tmux with start directory $1.
    local start_directory="$(readlink -f "${1}")"
    local session_name="$(basename "${start_directory:-.}")"
    tmux has-session -t "${session_name}" 2> /dev/null || {
        tmux new-session -d -s "${session_name}" -c "${start_directory}"
    }
    if [[ -z "${TMUX}" ]]; then
        tmux attach -t "${session_name}"
    else
        tmux switch-client -t "${session_name}"
    fi
}

# fzf
source ~/.nix-profile/share/fzf/completion.zsh
source ~/.nix-profile/share/fzf/key-bindings.zsh
bindkey -M vicmd -r '\ec'
bindkey -M viins -r '\ec'
bindkey -M vicmd '^G' fzf-cd-widget
bindkey -M viins '^G' fzf-cd-widget
export BR_FZF_BAT='bat --style=numbers --color=always --line-range :500 {}'
export FZF_DEFAULT_COMMAND='fd --hidden --follow --exclude .git'
export FZF_DEFAULT_OPTS='--multi --border --reverse'
export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
export FZF_CTRL_T_OPTS="--preview '${BR_FZF_BAT}' --border"
export FZF_CTRL_R_OPTS='--border --reverse'
export FZF_ALT_C_OPTS='--border'
export FZF_COMPLETION_OPTS='--border --height 60%'
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}
if command -v fzf &> /dev/null; then
    if command -v br-fd-git &> /dev/null; then
        fzf-repo() { br-fd-git -r ~/repository | fzf }
    fi
fi

# bat
if command -v bat &> /dev/null; then
    alias cat='bat --paging=never'
    alias bathelp='bat --plain --language help'
    if command -v batman &> /dev/null; then
        alias man='batman'
    fi
    if command -v batwatch &> /dev/null; then
        gitwatch() {
            local _num_commits=$(($(tput lines) - 5))
            batwatch \
                --plain -lgitlog \
                -x \
                git log \
                --oneline --decorate --graph --all \
                -n ${_num_commits} \
                "${@}"
        }
    fi
fi

# mux
. ~/.dotfiles/package/zsh/comp-mux.zsh

# nix
if [ -d "~/.nix-profile/" ]; then # We do have nix-profile.
    source ~/.nix-profile/share/zsh/plugins/nix/nix-zsh-completions.plugin.zsh
    # TODO This might not be the best way to do this...
    fpath=("${HOME}/.nix-profile/share/zsh/site-functions/" ${fpath})
fi
autoload -U compinit && compinit

# MAIN
# That is, what follows is our "enter hook".
if [ -z ${TMUX} ] && command -v tmuxinator &> /dev/null; then # Not in tmux.
    # So start tmux.
    T
fi
