# history
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=2000

# config
setopt appendhistory
setopt autocd extendedglob nomatch notify no_beep
setopt prompt_cr prompt_sp

# env vars
export KEYTIMEOUT=1
export BR_REPOROOT="${HOME}/repository"

# zle
bindkey -v
bindkey -v "^r" history-incremental-pattern-search-backward
bindkey -v "^ " push-line-or-edit
bindkey -a "^ " push-line-or-edit

# zstyle
zstyle :compinstall filename '/home/analyticalnoa/.zshrc'
autoload -Uz compinit
compinit

# prompt
BR_PROMPTCHAR=ðŸ¢’
PROMPT_0="%B${BR_PROMPTCHAR}%b "
PROMPT_1='%s%B%n %M %75<..<%~%b %? %#'
NL=$'\n'
PROMPT="${PROMPT_1}${NL}${PROMPT_0}"

# HOOK FUNCTIONS
#
preexec() {
    # local entry=${1}
    local cmd=${2}
    # local cmd_full=${3}

    # Update tmux window name.
    test -z ${TMUX} || tmux rename-window "${cmd%% *}"
}

precmd() {
    # Update tmux window name.
    test -z ${TMUX} || tmux rename-window "zsh"
}

zshexit() {
    # Revert tmux window name to what it was before we started.
    test -z ${TMUX} || tmux rename-window "${BR_TMUX_LAST_WINDOW_NAME}"
}

# ALIAS
# Yes, I know that aliases are supposed to be bad. But aliases for simple
# abbreviations allow the tmux window-renaming hooks above to get the actual
# name of the command; with functions, the preexec() hook can't get the actual
# command name (without excessive effort).
alias reload-zsh='. ~/.zshrc'
alias reload-tmux='tmux source-file ~/.tmux.conf'
alias ll='ls -alF'
alias Y='xclip -selection clipboard'
alias P='xclip -selection clipboard -o'
alias T='tmux a >&2 2>/dev/null || mux main'
alias R='ranger'
alias v='vim'
alias g='git'
alias wttr='curl "wttr.in/?mF&format=4"'
# Note that 'nix-env' is aliased in 'zshenv' with pinned nixpkgs.
alias update-nix='nix-env -v -riA'
alias update-nix-client='update-nix clientPackages'
alias update-nix-machine02='update-nix clientPackages serverPackages'
# Don't ssh from tmux, that's dangerous!
alias ssh='[ -z ${TMUX} ] && ssh'

# mux
. ~/.dotfiles/package/zsh/comp-mux.zsh

# nix
source ~/.nix-profile/share/zsh/plugins/nix/nix-zsh-completions.plugin.zsh
# TODO This might not be the best way to do this...
fpath=("${HOME}/.nix-profile/share/zsh/site-functions/" ${fpath})
autoload -U compinit && compinit

# MAIN
# That is, what follows is our "enter hook".
if [ -z ${TMUX} ]; then # We are not in tmux.
    # So start tmux.
    mux main
else # We are in tmux.
    # Save the current tmux window name.
    BR_TMUX_LAST_WINDOW_NAME=$(tmux display-message -p '#W')
fi
