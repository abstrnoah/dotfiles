" Author: Noah <abstractednoah@brumal.org>

" Note: This file uses vim's 'fold-marker' feature. Levels 1 and 2 are
" enumerated and reserved for sections; deeper levels are not enumerated. We
" avoid going deeper than three levels.

" SETUP {{{1

if !exists('$BR_VIMDIR')
    let $BR_VIMDIR = expand('~/.vim')
endif
if !isdirectory($BR_VIMDIR)
    echoerr "$BR_VIMDIR does not exist:" $BR_VIMDIR
endif
let $BR_VIM_PLUGRC = $BR_VIMDIR . '/plugrc.vim'
let $BR_VIM_MAPS = $BR_VIMDIR . '/after/plugin/maps.vim'

set encoding=utf-8
" set nocompatible (This is supposed to be set by default when vimrc present.)
filetype plugin indent on
if has('syntax')
    syntax enable
endif
set secure  " Probably unnecessary, but just in case.

" GLOBALS {{{1
" All custom globals are prefixed with 'br_'.
" All custom globals are set in this section. Plugin globals are defined in
" 'plugrc.vim'.

let g:br_colorcolumn = '+1'  " Default color column offset.

" Leader key for navigation-type operations such as fuzzy find files, etc.
let g:br_leader_nav = "<leader>e"
" For wiki aka note operations.
let g:br_leader_note = "<leader>n"
" For bang variants of maps.
let g:br_leader_bang = "<leader>!"
" For s-expr e.g. lisps.
let g:br_leader_sexp = "<leader>."
" For command-mode shortcut.
let g:br_leader_command = "<leader>:"
" For location/quickfix.
let g:br_subleader_qf = "q"

" Ftdetect *.m as mma rather than matlab.
let g:filetype_m = "mma"

" Configure tex.
let g:tex_conceal = "agmd"

" Resize increments.
let g:br_resize_width = 10
let g:br_resize_height = 5


" OPTIONS {{{1
" Roughly alphabetical.
" We try to set all options in this section, but some are set in SETUP, MAPS,
" and elsewhere.
" We refuse to end lines with whitespace, which means that option values ending
" in an escaped space like '\ ' are set using the :let-& feature.

set autoread

if has('cmdline_info')
    set showcmd
endif
" Give more space for displaying messages.
set cmdheight=2

if has('conceal')
    set conceallevel=2
endif

if has("folding")
    " Unset 'fillchars' items fallback to default.
    let &fillchars = "fold: "
    set foldmethod=marker
    set foldtext=brumal#main#foldtext()
    set foldcolumn=1
    " Start with top-level tolds open.
    set foldlevelstart=1
endif

" Format.
set nowrap
set textwidth=80
set autoindent
if v:version > 703 || v:version == 703 && has("patch541")
    " Delete comment character when joining lines.
    set formatoptions+=j
endif
set nojoinspaces
set list
set listchars=tab:<->,trail:_,precedes:<,extends:>

set hidden

set number

set nrformats-=octal

set updatetime=300

set scrolloff=3

if has('extra_search')
    set incsearch hlsearch
endif

set shellredir=>

" Don't pass messages to |ins-completion-menu|.
set shortmess+=c

if has('signs') && has('patch-7.4.2201')
    set signcolumn=yes
endif

if has('statusline')
    set laststatus=2 " Always display statusline.
    let &statusline = '%<%f %m%r%y%=(%l/%L %P, %c)'
endif

if has('syntax')
    set cursorline
    set cursorcolumn
    let &colorcolumn = g:br_colorcolumn
    set spelllang=en_gb
    let &spellfile = $BR_VIMDIR . '/spell/en.utf-8.add'
    if has('patch-8.2.953')
        set spelloptions+=camel
    endif
    set spellcapcheck=
endif

set splitbelow splitright " Put new window below or right, feels more intuitive.

set noswapfile

" Tabs.
" One tab = four spaces.
" 'shiftwidth=0' means fallback to 'tabstop'.
set expandtab
set tabstop=4 softtabstop=4 shiftwidth=0
set smarttab

set timeoutlen=500

if has('wildmenu')
    set wildmenu
endif

" MAPS {{{1
" For most mapping, see 'after/plugin/maps.vim'.
" We put them there to ensure our mappings override both vim and plugin
" defaults.
" All mappings go there unless they need to go elsewhere for some reason.
" Coc's bindings are in 'cocrc.vim' bc coc is so much. When plugins have an
" option like 'g:plugin_featureX_map', those are set either in this section or
" below in the plugin's respective subsection.

let mapleader = " "
let maplocalleader = " "
" See GLOBALS for 'g:br_leader_*'.


" ABBREVIATIONS {{{1

inoreabbrev -[] - [ ]
inoreabbrev *[] * [ ]


" COMMANDS {{{1

command TrimTrailingWhitespace %s/\s\+$//g

command -bang -nargs=* -complete=tag S
    \ let @/ = brumal#main#multiSearch(0, <bang>0, <f-args>)
    \ | normal! /<C-R>/<CR>
command -bang -nargs=* -complete=tag SB
    \ let @/ = brumal#main#multiSearch(0, <bang>0, <f-args>)
    \ | normal! ?<C-R>/<CR>

" FIXME: This doesn't work because it clears custom theme below. Theme below
" needs to be moved to a fork of solarized.
" command ToggleBG let &background = ( &background == "dark"? "light" : "dark" )

" PLUGINS {{{1

if &loadplugins
    if filereadable($BR_VIM_PLUGRC)
        source $BR_VIM_PLUGRC
    else
        echoerr "$BR_VIM_PLUGRC not readable:" $BR_VIM_PLUGRC
    endif
else
    " Maps are put in '$BR_VIMDIR/after/plugin/maps.vim' so that they override
    " plugins, but we still want them if no plugins, so manually source them in
    " this case.
    if filereadable($BR_VIM_MAPS)
        source $BR_VIM_MAPS
    else
        echoerr "$BR_VIM_MAPS not readable:" $BR_VIM_MAPS
    endif
endif

" LOOK [DEPRECATED] {{{1
" Section is deprecated, needs to be moved to colorscheme fork or elsewhere.

" TODO: Move to a fork of solarized.
if &loadplugins
    set background=dark
    colorscheme solarized
endif

" Fixed preformance issue[^2]
autocmd BufWinLeave * call clearmatches()

" (Still not sure about these.)
" highlight Search ctermbg=black
" highlight Visual ctermbg=black
hi Folded cterm=none

" Accent current line number.
hi CursorLine ctermbg=black cterm=bold
hi CursorLineNr cterm=bold ctermbg=none
hi CursorLineSign cterm=none ctermbg=none
hi CursorLineFold cterm=none
hi SignColumn ctermbg=black
hi ColorColumn ctermbg=black
hi CursorColumn cterm=bold ctermbg=none
hi Cursor cterm=bold

" NOTES {{{1
" [^2]: https://vim.fandom.com/wiki/Highlight_unwanted_spaces

" vim:ft=vim:fdm=marker:fmr={{{,}}}:fen:tw=80:et:ts=4:sts=4:sw=0:
